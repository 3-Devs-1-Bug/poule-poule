// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace server.Migrations
{
    [DbContext(typeof(PouleContext))]
    [Migration("20200102225838_sayings")]
    partial class sayings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Data.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("CardSpeed")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("HostId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoundsToWin")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("Api.Data.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Api.Data.Entities.Saying", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Saying");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Mon coq est lâché, gardez vos poules !"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Il ne faut pas compter les œufs au cul de la poule."
                        },
                        new
                        {
                            Id = 3,
                            Content = "Poule qui chante et coq qui danse méritent la potence."
                        },
                        new
                        {
                            Id = 4,
                            Content = "Qui prend le coq pour guide aura un poulailler pour refuge."
                        },
                        new
                        {
                            Id = 5,
                            Content = "Si l'on veut l'œuf, qu'on supporte la poule."
                        },
                        new
                        {
                            Id = 6,
                            Content = "Poule promeneuse devient la proie du renard."
                        },
                        new
                        {
                            Id = 7,
                            Content = "Quand le renard se met à prêcher, prends garde à ta poule."
                        },
                        new
                        {
                            Id = 8,
                            Content = "Une poule ne se confesse pas au renard."
                        },
                        new
                        {
                            Id = 9,
                            Content = "La poule affamée trouve elle-même l'orge au grenier."
                        },
                        new
                        {
                            Id = 10,
                            Content = "On ne confie pas des poules à un renard."
                        },
                        new
                        {
                            Id = 11,
                            Content = "L'œuf d'aujourd'hui vaut mieux que la poule de demain."
                        },
                        new
                        {
                            Id = 12,
                            Content = "Même la poule à un cœur."
                        },
                        new
                        {
                            Id = 13,
                            Content = "La poule domestique chasse la poule sauvage."
                        });
                });

            modelBuilder.Entity("Api.Data.Entities.Player", b =>
                {
                    b.HasOne("Api.Data.Entities.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId");
                });
#pragma warning restore 612, 618
        }
    }
}
